/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package edu.itsco;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int REAL = 5;
  /** RegularExpression Id. */
  int CADENA = 6;
  /** RegularExpression Id. */
  int DECIMAL = 7;
  /** RegularExpression Id. */
  int ESCRIBE = 8;
  /** RegularExpression Id. */
  int LEE = 9;
  /** RegularExpression Id. */
  int SI = 10;
  /** RegularExpression Id. */
  int SINO = 11;
  /** RegularExpression Id. */
  int CAMBIAR = 12;
  /** RegularExpression Id. */
  int CASO = 13;
  /** RegularExpression Id. */
  int ROMPER = 14;
  /** RegularExpression Id. */
  int XDEFECTO = 15;
  /** RegularExpression Id. */
  int PARA = 16;
  /** RegularExpression Id. */
  int MIENTRAS = 17;
  /** RegularExpression Id. */
  int HACER = 18;
  /** RegularExpression Id. */
  int PROGRAMA = 19;
  /** RegularExpression Id. */
  int MAS = 20;
  /** RegularExpression Id. */
  int MENOS = 21;
  /** RegularExpression Id. */
  int POR = 22;
  /** RegularExpression Id. */
  int DIVISION = 23;
  /** RegularExpression Id. */
  int RESIDUO = 24;
  /** RegularExpression Id. */
  int IGUAL = 25;
  /** RegularExpression Id. */
  int MAYOR = 26;
  /** RegularExpression Id. */
  int MENOR = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int NOT = 30;
  /** RegularExpression Id. */
  int AP = 31;
  /** RegularExpression Id. */
  int CP = 32;
  /** RegularExpression Id. */
  int ALL = 33;
  /** RegularExpression Id. */
  int CLL = 34;
  /** RegularExpression Id. */
  int PC = 35;
  /** RegularExpression Id. */
  int PP = 36;
  /** RegularExpression Id. */
  int digitos = 37;
  /** RegularExpression Id. */
  int letras = 38;
  /** RegularExpression Id. */
  int ID = 39;
  /** RegularExpression Id. */
  int VALOR_REAL = 40;
  /** RegularExpression Id. */
  int VALOR_DECIMAL = 41;
  /** RegularExpression Id. */
  int VALOR_CADENA = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"real\"",
    "\"cadena\"",
    "\"decimal\"",
    "\"escribe\"",
    "\"lee\"",
    "\"si\"",
    "\"sino\"",
    "\"cambiar\"",
    "\"caso\"",
    "\"romper\"",
    "\"xdefecto\"",
    "\"para\"",
    "\"mientras\"",
    "\"hacer\"",
    "\"programa\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\":\"",
    "<digitos>",
    "<letras>",
    "<ID>",
    "<VALOR_REAL>",
    "<VALOR_DECIMAL>",
    "<VALOR_CADENA>",
  };

}
